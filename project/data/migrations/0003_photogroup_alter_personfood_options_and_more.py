# Generated by Django 5.2.1 on 2025-05-20 08:40

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0002_alter_wedding_venue"),
    ]

    operations = [
        migrations.CreateModel(
            name="PhotoGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("detail", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.AlterModelOptions(
            name="personfood",
            options={},
        ),
        migrations.RemoveField(
            model_name="person",
            name="has_rsvp",
        ),
        migrations.RemoveField(
            model_name="personfood",
            name="created",
        ),
        migrations.RemoveField(
            model_name="personfood",
            name="modified",
        ),
        migrations.AddField(
            model_name="person",
            name="address",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="person",
            name="children",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="person",
            name="dietary_requirements",
            field=models.ManyToManyField(
                related_name="person", through="data.PersonFood", to="data.food"
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="has_plus_one",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="person",
            name="has_rsvp_ceremony",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="person",
            name="has_rsvp_reception",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="person",
            name="invited_to_ceremony",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="person",
            name="invited_to_reception",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="person",
            name="pets",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="person",
            name="phone",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name="person",
            name="plus_one_name",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name="personfood",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.CreateModel(
            name="PersonGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relationship_type", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_memberships",
                        to="data.person",
                    ),
                ),
                (
                    "related_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_to",
                        to="data.person",
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "related_person")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="relationships",
            field=models.ManyToManyField(
                related_name="related_people",
                through="data.PersonGroup",
                to="data.person",
            ),
        ),
        migrations.CreateModel(
            name="PersonPhotoGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.person",
                    ),
                ),
                (
                    "photo_group",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.photogroup",
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "photo_group")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="photo_groups",
            field=models.ManyToManyField(
                related_name="person",
                through="data.PersonPhotoGroup",
                to="data.photogroup",
            ),
        ),
    ]
