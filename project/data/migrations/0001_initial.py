# Generated by Django 5.2.1 on 2025-05-21 07:48

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Food",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NONE", "None"),
                            ("VEGETARIAN", "Vegetarian"),
                            ("VEGAN", "Vegan"),
                            ("PESCATARIAN", "Pescatarian"),
                            ("GLUTEN_FREE", "Gluten-Free"),
                            ("DAIRY_FREE", "Dairy-Free"),
                            ("NUT_FREE", "Nut-Free"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("detail", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("firstname", models.CharField(max_length=255)),
                ("lastname", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("address", models.CharField(blank=True, max_length=255)),
                ("priority", models.IntegerField(choices=[], default=1)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("STANDARD", "Standard"),
                            ("BRIDESMAID", "Bridesmaid"),
                            ("GROOMSMEN", "Groomsmen"),
                            ("IMMEDIATEFAMILY", "Immediate Family"),
                            ("BRIDEGROOM", "Bride/Groom"),
                        ],
                        max_length=50,
                    ),
                ),
                ("invited_to_ceremony", models.BooleanField(default=False)),
                ("has_rsvp_ceremony", models.BooleanField(default=False)),
                ("invited_to_reception", models.BooleanField(default=False)),
                ("has_rsvp_reception", models.BooleanField(default=False)),
                ("has_plus_one", models.BooleanField(default=False)),
                ("plus_one_name", models.CharField(blank=True, max_length=255)),
                ("children", models.IntegerField(default=0)),
                ("pets", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ["firstname"],
            },
        ),
        migrations.CreateModel(
            name="PhotoGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("detail", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "address_line1",
                    models.CharField(max_length=255, verbose_name="Address Line 1"),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Address Line 2"
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("county", models.CharField(blank=True, max_length=100)),
                ("postcode", models.CharField(max_length=20)),
                ("country", models.CharField(blank=True, default="UK", max_length=100)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("capacity", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PersonFood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "food",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.food",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.person",
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "food")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="dietary_requirements",
            field=models.ManyToManyField(
                related_name="person", through="data.PersonFood", to="data.food"
            ),
        ),
        migrations.CreateModel(
            name="PersonGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relationship_type", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_memberships",
                        to="data.person",
                    ),
                ),
                (
                    "related_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_to",
                        to="data.person",
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "related_person")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="relationships",
            field=models.ManyToManyField(
                related_name="related_people",
                through="data.PersonGroup",
                to="data.person",
            ),
        ),
        migrations.CreateModel(
            name="PersonPhotoGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.person",
                    ),
                ),
                (
                    "photo_group",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.photogroup",
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "photo_group")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="photo_groups",
            field=models.ManyToManyField(
                related_name="person",
                through="data.PersonPhotoGroup",
                to="data.photogroup",
            ),
        ),
        migrations.CreateModel(
            name="Wedding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("description", models.TextField(blank=True)),
                (
                    "bride",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bride",
                        to="data.person",
                    ),
                ),
                (
                    "groom",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="groom",
                        to="data.person",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.venue",
                    ),
                ),
            ],
        ),
    ]
